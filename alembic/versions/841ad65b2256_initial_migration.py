"""Initial migration

Revision ID: 841ad65b2256
Revises:
Create Date: 2025-08-08 06:40:11.411048

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '841ad65b2256'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_categories_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_categories_name'), ['name'], unique=False)

    op.create_table('customers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('mobile', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_customers_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_customers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_customers_mobile'), ['mobile'], unique=True)
        batch_op.create_index(batch_op.f('ix_customers_name'), ['name'], unique=False)

    op.create_table('delivery_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('delivery_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_delivery_types_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_delivery_types_name'), ['name'], unique=False)

    op.create_table('event_offers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('type', sa.Enum('event', 'offer', name='eventoffertype'), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('rate_type', sa.Enum('flat', 'percentage', name='ratetype'), nullable=True),
    sa.Column('rate', sa.Integer(), nullable=True),
    sa.Column('product_ids', sa.String(), nullable=True),
    sa.Column('category_ids', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('event_offers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_event_offers_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_event_offers_name'), ['name'], unique=False)

    op.create_table('payment_types',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('payment_types', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_payment_types_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_payment_types_name'), ['name'], unique=False)

    op.create_table('shops',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('addressLine1', sa.String(), nullable=True),
    sa.Column('addressLine2', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=True),
    sa.Column('state', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('zipcode', sa.String(), nullable=True),
    sa.Column('mobileNumber', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('shops', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_shops_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_shops_name'), ['name'], unique=False)

    op.create_table('vendors',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('mobile', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('vendors', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_vendors_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_vendors_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_vendors_mobile'), ['mobile'], unique=True)
        batch_op.create_index(batch_op.f('ix_vendors_name'), ['name'], unique=False)

    op.create_table('attributes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('value', sa.String(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('attributes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_attributes_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_attributes_name'), ['name'], unique=False)

    op.create_table('products',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('unit_price', sa.Integer(), nullable=True),
    sa.Column('selling_price', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('can_listed', sa.Boolean(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_products_id'), ['id'], unique=False)
        batch_op.create_index(batch_op.f('ix_products_name'), ['name'], unique=False)

    op.create_table('purchases',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('total_quantity', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('payment_reference_number', sa.String(), nullable=True),
    sa.Column('delivery_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['delivery_type_id'], ['delivery_types.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payment_types.id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendors.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('purchases', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_purchases_id'), ['id'], unique=False)

    op.create_table('sales',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('date', sa.String(), nullable=True),
    sa.Column('total_quantity', sa.Integer(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('payment_reference_number', sa.String(), nullable=True),
    sa.Column('payment_type_id', sa.Integer(), nullable=True),
    sa.Column('delivery_type_id', sa.Integer(), nullable=True),
    sa.Column('customer_id', sa.Integer(), nullable=True),
    sa.Column('shop_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['customer_id'], ['customers.id'], ),
    sa.ForeignKeyConstraint(['delivery_type_id'], ['delivery_types.id'], ),
    sa.ForeignKeyConstraint(['payment_type_id'], ['payment_types.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sales_id'), ['id'], unique=False)

    op.create_table('product_sizes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('product_sizes', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_product_sizes_id'), ['id'], unique=False)

    op.create_table('purchase_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('product_name', sa.String(), nullable=True),
    sa.Column('product_category', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('quantity_available', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('purchase_price', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('purchase_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('purchase_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_purchase_items_id'), ['id'], unique=False)

    op.create_table('sale_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('product_name', sa.String(), nullable=True),
    sa.Column('product_category', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('quantity_available', sa.Integer(), nullable=True),
    sa.Column('quantity', sa.Integer(), nullable=True),
    sa.Column('sale_price', sa.Float(), nullable=True),
    sa.Column('total_price', sa.Float(), nullable=True),
    sa.Column('sale_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sale_id'], ['sales.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sale_items', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_sale_items_id'), ['id'], unique=False)

    op.create_table('shop_products',
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('shop_id', 'product_id')
    )
    op.create_table('shop_purchases',
    sa.Column('shop_id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.ForeignKeyConstraint(['shop_id'], ['shops.id'], ),
    sa.PrimaryKeyConstraint('shop_id', 'purchase_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('shop_purchases')
    op.drop_table('shop_products')
    with op.batch_alter_table('sale_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sale_items_id'))

    op.drop_table('sale_items')
    with op.batch_alter_table('purchase_items', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchase_items_id'))

    op.drop_table('purchase_items')
    with op.batch_alter_table('product_sizes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_product_sizes_id'))

    op.drop_table('product_sizes')
    with op.batch_alter_table('sales', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_sales_id'))

    op.drop_table('sales')
    with op.batch_alter_table('purchases', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_purchases_id'))

    op.drop_table('purchases')
    with op.batch_alter_table('products', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_products_name'))
        batch_op.drop_index(batch_op.f('ix_products_id'))

    op.drop_table('products')
    with op.batch_alter_table('attributes', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_attributes_name'))
        batch_op.drop_index(batch_op.f('ix_attributes_id'))

    op.drop_table('attributes')
    with op.batch_alter_table('vendors', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_vendors_name'))
        batch_op.drop_index(batch_op.f('ix_vendors_mobile'))
        batch_op.drop_index(batch_op.f('ix_vendors_id'))
        batch_op.drop_index(batch_op.f('ix_vendors_email'))

    op.drop_table('vendors')
    with op.batch_alter_table('shops', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_shops_name'))
        batch_op.drop_index(batch_op.f('ix_shops_id'))

    op.drop_table('shops')
    with op.batch_alter_table('payment_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_payment_types_name'))
        batch_op.drop_index(batch_op.f('ix_payment_types_id'))

    op.drop_table('payment_types')
    with op.batch_alter_table('event_offers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_event_offers_name'))
        batch_op.drop_index(batch_op.f('ix_event_offers_id'))

    op.drop_table('event_offers')
    with op.batch_alter_table('delivery_types', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_delivery_types_name'))
        batch_op.drop_index(batch_op.f('ix_delivery_types_id'))

    op.drop_table('delivery_types')
    with op.batch_alter_table('customers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_customers_name'))
        batch_op.drop_index(batch_op.f('ix_customers_mobile'))
        batch_op.drop_index(batch_op.f('ix_customers_id'))
        batch_op.drop_index(batch_op.f('ix_customers_email'))

    op.drop_table('customers')
    with op.batch_alter_table('categories', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_categories_name'))
        batch_op.drop_index(batch_op.f('ix_categories_id'))

    op.drop_table('categories')
    # ### end Alembic commands ###
